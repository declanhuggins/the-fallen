permissions:
  contents: write

name: Build, Tag & Deploy on Main Branch

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Build Mod
        run: ./gradlew build

      - name: Prepare Main Jar Artifact
        run: |
          # Find the main jar (exclude any -sources.jar)
          MAIN_JAR=$(ls ./build/libs/the-fallen-*.jar | grep -v sources)
          echo "Main jar found: $MAIN_JAR"
          mkdir -p artifact
          cp "$MAIN_JAR" artifact/
          echo "Artifact folder contents:"
          ls -al artifact
        shell: bash

      - name: Upload Jar Artifact
        uses: actions/upload-artifact@v4
        with:
          name: the-fallen-jar
          path: artifact

  tag_release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code for Tagging
        uses: actions/checkout@v3

      - name: Read mod_version from gradle.properties
        id: read_version
        run: |
          version=$(grep "^mod_version=" gradle.properties | cut -d'=' -f2)
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "mod_version: $version"
          
      - name: Auto Tag Release
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CUSTOM_TAG: "v${{ steps.read_version.outputs.version }}"

  deploy:
    runs-on: ubuntu-latest
    needs: tag_release
    steps:
      - name: Checkout Code for Deployment
        uses: actions/checkout@v3
      
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Get mod_version and Set Tag
        id: get_version
        run: |
          version=$(grep "^mod_version=" gradle.properties | cut -d'=' -f2)
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "tag=v$version" >> $GITHUB_OUTPUT
          echo "Using version: $version"
          echo "Using tag: v$version"

      - name: Download Jar Artifact
        uses: actions/download-artifact@v4
        with:
          name: the-fallen-jar
          path: ./downloaded_artifact

      - name: List Downloaded Artifacts
        run: ls -al ./downloaded_artifact

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.tag }}
          release_name: "Release ${{ steps.get_version.outputs.tag }}"
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./downloaded_artifact/the-fallen-${{ steps.get_version.outputs.version }}.jar
          asset_name: "the-fallen-${{ steps.get_version.outputs.version }}.jar"
          asset_content_type: application/java-archive

      - name: Publish to Modrinth via Minotaur
        run: ./gradlew modrinth
        env:
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}